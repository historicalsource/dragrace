	ROM=1
	.NLIST	TTM
	.TITLE	DRAGON
	.MACRO	.MSG,STRING
	.IRPC	..1,STRING
	.IF	LE,''..1-47.	;IF BELOW 0, SET WHITE
	.IFT
	.BYTE	WHITE
	.IFF
	.IF	GT,''..1-57.
	.C=	''..1-55.
	.IFF
	.C=	''..1-48.
	.ENDC
	.IF	GT,.C-31.	;IF V OR BEFORE LEAVE ALONE
	.C=	.C+32.		;ELSE ADD 20 HEX
	.ENDC
	.BYTE	.C
	.ENDC
	.ENDM
	.BYTE	128.			;EOL
	.ENDM


	.ASECT

	.SBTTL	DEFINITIONS
BALL	=	70		;38 HEX
WHITE	=	340
BLACK	=	240
BLO1	=	20		;10 HEX, NUMBER OF FIRST BLOW-UP PICT.
CHP1	=	23		;13 HEX, NUMBER OF FIRST CHUTE   PICT.
EDGE1	=	146		;66
RAIL	=	147		;67
ACEL1	=	4000		;800 HEX
ACEL2	=	4010		;808 HEX
TSWT	=	4005		;805 HEX
CONSW1	=	4020
CONSW2	=	4030
START0	=	4050		;828 HEX
LAMP1	=	^H90F
START2	=	4040		;820 HEX
LAMP2	=	^H91F
MOTOR1	=	^H90B
MOTOR2	=	^H91B
PRICEH	=	4060		;830 PRICE OPTIONS
PRICEL	=	4070		;838
MSPD1	=	4400		;900 HEX
MSPD2	=	4420		;910 HEX
SCRCH1	=	4406		;906 1 IS ON
EXPL1	=	4405
EXPL2	=	4425
TONE1	=	4415
TONE2	=	4435
WTCHDG	=	7000		;E00 HEX, WATCHDOG
LTEST	=	6400		;D00 HEX
STRG	=	6000
PLAY	=	5000
POS	=	5400
STAMP1	=	PLAY+141
XMTREE	=	PLAY+220
RPOS1	=	POS+50
TPOS2	=	POS+70
TPOS0	=	POS+250
RPOS2	=	POS+170
RPOS3	=	POS+230
RPOS4	=	POS+350
RDLIN	=	240.		;REDLINE FOR BLOWUP.
SHFTPT	=	160.		;AUTO-CAR'S SHIFT POINT
ETFRCT	=	12.		;# OF FRAMES PER PSUEDO-TENTH'
HTTIM	=	150.		;# OF 'PSUEDO TENTHS' PER HEAT
POWBND	=	208.		;BOTTOM OF POWER BAND
VLVFLT	=	240.		;TOP OF POWER BAND
FINISH	=	240		;CRUDST= THIS AT FINISH

	.SBTTL	RAM LOCATIONS
	.=200
K:	.BLKB	1		;2 BUCKETS, FOR TEMPORARY
L:	.BLKB	1		;STORAGE WITHIN SUBROUTINES.
M:	.BLKB	1		;BUCKET FOR INT. RTNS.
CHPOS:	.BLKB	1		;HORIZ. DISP. FOR CAR
DIST:	.BLKB	1		;DISTANCE TRAVELED (FT./256)
	.BLKB	2		;CHPOS, DIST FOR CAR 2
RODPOS:	.BLKB	2		;HORIZ. DISP. FOR ROAD
	.BLKB	2		;RODPOS FOR CAR 2
CVPOS:	.BLKB	2
	.BLKB	2		;CVPOS FOR CAR 2
DLTARP:	.BLKB	1		;DELTA (RODPOS)
LVEL:	.BLKB	1
	.BLKB	2		;DLTARP AND LVEL FOR CAR2
STAT:	.BLKB	1
VEL:	.BLKB	1
	.BLKB	2		;STAT, VEL FOR CAR 2
BMSG:	.BLKB	1		;MESSAGE FOR BOTTOM OF TRACK
TMSG:	.BLKB	1		;MESSAGE FOR TOP OF TRACK
	.BLKB	2		;TMSG, BMSG FOR CAR 2
GEAR:	.BLKB	1
STW:	.BLKB	1
	.BLKB	2		;GEAR, STW FOR CAR 2
ERPM:	.BLKB	1
LOAD:	.BLKB	1
	.BLKB	2		;ERPM, LOAD FOR CAR 2
MSMTCH:	.BLKB	1		;MISMATCH - ROAD:WHEELS
CRUDST:	.BLKB	1		;CRUDE MEASURE OF DISTANCE.
	.BLKB	2		;MSMTCH, CRUDST FOR CAR 2.
REVINT:	.BLKB	4
SWT:	.BLKB	1		;BUFFER FOR SWITCHES
TSTW:	.BLKB	1		;BUFFER FOR STEERING
	.BLKB	2		;SWT, TSTW FOR OTHER CAR.
BLTIM:	.BLKB	1		;BLOW-UP TIMER
CHUTIM:	.BLKB	1		;CHUTE TIMER
	.BLKB	2		;BLTIM, CHUTIM FOR CAR 2
PGEAR:	.BLKB	1		;PROPOSED GEAR
PENTIM:	.BLKB	1		;PENALTY TIMER
	.BLKB	2
PICT1:	.BLKB	3		;PICTURE F0R CAR 1(2)
PICT2:	.BLKB	3		;   "     "   "  2(0)
ETCOM:	.BLKB	1		;COMMON TIMER FOR ET
ETDIV:	.BLKB	1		;FRAME DIV. FOR ET
FRFLG:	.BLKB	1		;
TREE:	.BLKB	1		;BIT MAP VERSION OF XMAS TREE
CARPTR:	.BLKB	2		;INDEX FOR CAR PARAMETERS.
CARNO	=	.-1		;A ONE BYTE CAR #, 0 (BOT) OR 2 (TOP)
EHTIM:	.BLKB	1
MTIMER:	.BLKB	1
ATMTIM:	.BLKB	1		;ATTRACT MSG. TIMER
TIME:	.BLKB	2		;MUST BE JUST BEFORE OTIME***
OTIME:	.BLKB	1		;MUST TRACK L.S.BYTE OF TIME.
SOUND1:	.BLKB	1		;BITS TO OUTPUT TO FIRST GROUP OF SOUND LATCHES.
SOUND2:	.BLKB	1		;SAME FOR SECOND GROUP.
	.BLKB	2		;SOUNDS FOR SECOND CAR.
TBLPTR:	.BLKB	2		;FOR BUILDING INDEX REGISTERS.
TXTPOS:	.BLKB	2		;WHERE MSG. GOES
MTXT:	.BLKB	2		;POINT TO MESSAGE TEXT.
ET:	.BLKB	1		;ELAPSED TIME (FROZEN AT FINISH)
DRIVER:	.BLKB	1		;+PLAYER -MACHINE
	.BLKB	2
OSTRG:	.BLKB	1		;OLD STEERING
SAVG:	.BLKB	1		;SOUND AVERAGE
TALY1:	.BLKB	1		;COIN TIMER
TALY2:	.BLKB	1		;THE OTHER COIN TIMER
HEAT:	.BLKB	1		;MUST BE JUST BEFORE CASE***
CASE:	.BLKB	1		;CASE SWITCH.
RECLOW:	.BLKB	1		;RECORD LOW THIS PLAYER
STSW:	.BLKB	1	;START SWITCH DEBOUNCE
	.BLKB	2
CREDIT:	.BLKB	1		;JUST WHAT IT SAYS.
COINCT:	.BLKB	1		;COUNTS COINS, NOT CREDITS
POLY:	.BLKB	1
	.=	11000		;1200 HEX
	.SBTTL	SETUP
RESET:	LDS	I,377		;KEEP AN EYE ON STACK***
	LDX	E,^H3000	;CHECK FOR DIAGNOSTIC FIXTURE
	CPX	I,0
	.=	.-2
	.RAD50	/TST/
	BNE	1$
	JMP	^H3002		;JUMP TO DIAGNOSTIC, IF PRESENT
1$:	TST	E,TSWT
	BMI	2$
	JMP	E,TROUT
2$:	LDX	I,0
	STX	D,CREDIT	;GETS COINCT TOO.
	STX	D,TALY1		;ALSO GETS TALY2
	JSR	CLRTOT
NPR:	LDX	I,0
	STX	D,TIME+1	;GETS OTIME TOO
	STX	D,HEAT		;GETS CASE TOO
	LDAA	I,377
	STAA	D,DRIVER
	STAA	D,DRIVER+2
	STAA	E,WTCHDG
	.BYTE	2		;!!! IMPORTANT, SEE PG. A-13 OF APPLICATIONS
	CLI			;MANUAL, QUESTION 15 !!!
	BSR	INIT
	JMP	E,WAIT		;SYNC IN
CKS12:	.BYTE	273		;CHECKSUM FOR ROM 1200-13FF
INIT:	LDX	I,TIME-200	;GET OFFSET FROM START OF RAM
	CLRB
1$:	STAB	X,200		;CLEAR L-TIME
	DEX
	BNE	1$
	LDX	I,PLAY
	LDAA	I,BLACK
2$:	STAA	X,0		;BLANK PLAYFIELD
	INX
	INCB
	BNE	2$
	LDX	I,PLAY+100
	LDAA	I,WHITE
	LDAB	I,64.
3$:	STAA	X,0		;WRITE TRACK
	STAA	X,160
	INX
	DECB
	BNE	3$
	LDAB	I,16.
	LDX	I,PLAY+60
4$:	LDAA	I,RAIL
	BITB	I,3
	BNE	5$
	DECA			;MAKES IT EDGE1
5$:	STAA	X,0
	STAA	X,160
	ADDA	I,3		;MAKES IT TOP JUSTIFIED***
	STAA	X,120
	STAA	X,300
	INX
	DECB
	BNE	4$
	LDAA	I,8.		;MOVE UP AND LEFT 1/2 STAMP.
	CLRB
	LDX	I,POS
6$:	STAA	X,0
	BITB	I,1
	BEQ	7$		;8'S IN EVEN LOCATIONS
	CLR	X,0		;0'S IN ODD LOCATIONS
7$:	INX
	INCB
	BNE	6$
	LDAA	I,46
	STAA	D,CVPOS
	STAA	D,CVPOS+2	;CENTER CARS ON TRACK
	LDAA	I,300
	STAA	D,STAT
	STAA	D,STAT+2
	LDAA	I,4		;IMPOSSIBLE-TO-REACH VALUE, WILL
	STAA	D,FRFLG		;FORCE WAIT FOR V-BLANKING
	LDX	I,0
	STX	D,TIME+1	;GETS OTIME TOO, ASSURES SYNCHRONISM.
	RTS

	.SBTTL	MAIN (?) LOOP
CHARGE:	DEC	E,CREDIT
CLRTOT:	LDAA	I,152.
	STAA	D,RECLOW
	STAA	D,RECLOW+2
	RTS
ATLOOP:	LDX	I,0
	STX	D,SOUND1
	STX	D,SOUND1+2
CKSTSW:	LDX	I,2		;POINT TO PARAM BLOCK
	LDAB	E,START2	;GET START SW.
	JSR	STARTQ		;PROCESS START
	LDX	I,0		;DO OTHER ONE
	LDAB	E,START0
	JSR	STARTQ
WAIT:	WAI
	LDAA	D,FRFLG
	BITA	I,375
	BNE	WAIT
	STAA	D,CARNO
	LDX	D,CARPTR
	JSR	E,DRIVE		;SETS DUMMIES
	JSR	E,ENGINE	;A = VEL
	STAA	X,VEL
	LDAB	X,ERPM
	LDAA	X,REVINT+1
	SUBB	I,RDLIN		;OVER-REV?
	BCC	1$		;'BHS'
	CLRB
	CLRA
1$:	ABA
	STAA	X,REVINT+1
	LDAA	I,0		;CLRA, LEAVE CARRY
	ADCA	X,REVINT
	STAA	X,REVINT
	BEQ	2$
	JSR	E,BLOW
2$:	JSR	E,HMOV
	JSR	E,VMOV
	JSR	E,CARMOV
	JSR	E,RODMOV
	JSR	E,PICT
	JSR	E,CHUTE
	JSR	E,ENDCHK
	JSR	E,PNLTY
	LDAA	D,CARNO		;CHEAP TST
	BNE	CASWT
	LDAA	D,OTIME
	INCA
	CMPA	D,TIME+1
	BEQ	3$
	SWI
3$:	STAA	D,OTIME
	BITA	I,77
	BNE	WHTNXT
	DEC	E,MTIMER
	BNE	WHTNXT
	JSR	E,INIT		;RE-INIT IF MTIMER RUNS OUT (273 SEC./4.5 MIN.)
	STX	D,HEAT		;INIT RETURNS WITH X=0
WHTNXT:	STAA	E,WTCHDG	;KEEP SLEEPING DOGS ASLEEP.
CASWT:	CLI			;JUST IN CASE!!
	LDAA	D,CASE
	BEQ	ATMSG
	DECA
	BNE	1$
	JMP	E,INST1
1$:	DECA
	BNE	2$
	JMP	E,XMTRTN
2$:	DECA
	BEQ	WAIT
	DECA
	BNE	3$
	JMP	E,WINNER
3$:	SWI			;ILLEGAL CASE, RESET
ATMSG:	LDAA	D,CARNO
	BEQ	ATEXIT
	TST	E,TSWT
	BMI	1$
	SEI
	JMP	E,TROUT
1$:	LDAB	D,CREDIT	;MONEY IN SLOT?
	BEQ	ATINST		;NO, ROLL THE INSTRUCTIONS.
	JSR	E,PRICE		;CHECK FOR FREE PLAY
	BEQ	ATINST		;YES, ROLL 'EM
	LDAA	D,TIME+1
	BITA	I,37
	BNE	ATEXIT
ATFP:	LDAA	I,M.CF-MTBL
	STAA	D,TMSG+2
	LDAA	I,M.1P-MTBL
	LDAB	D,CREDIT
	DECB
	BLE	 ATSNT1
	LDAA	 I,M.2P-MTBL
	BRA	 ATSNT1
ATINST:	LDAB	D,ATMTIM
	LDAA	D,TIME+1
	BITA	I,3		;EVERY FOURTH FRAME
	BNE	ATEXIT
ATRST:	LDX	I,MDTBL
	STAB	D,ATMTIM	;HERE FOR RESTART ONLY***
	INC	E,ATMTIM
	TSTB
2$:	BEQ	ATPMSG
	INX
	SUBB	I,51.
	BCC	2$
	BRA	ATEXIT
ATPMSG:	LDAA	X,0		;GET NEXT MESSAGE
	CMPA	I,M.CF-MTBL	;'CREDIT FOR'?
	BEQ	ATPRCE		;YES, QUOTE PRICE.
	CMPA	I,M.BX-MTBL	;BONUS?
	BNE	ATSENT		;NO, PRINT IT
	LDAB	D,SWT+2		;ELSE CHECK BONUS SWITCHES
	ANDB	I,3
	BEQ	ATRST		;NO BONUS, RESTART MESSAGES NOW
ATSENT:	STAA	D,TMSG+2
	LDAA	X,6
ATSNT1:	STAA	D,BMSG+2
ATEXIT:	JMP	E,ATLOOP
ATPRCE:	JSR	E,PRICE
	BEQ	ATFP		;FREE PLAY
	BITB	I,1		;PRICE 1 COIN?
	BNE	LOMED		;PER WHAT?
	LDAA	I,M.2C-MTBL
	BRA	ATSENT
LOMED:	LDAA	I,M.1C-MTBL
	TST	E,PRICEH
	BMI	ATSENT
	LDAA	I,M.2P-MTBL
	STAA	D,TMSG+2
	LDAA	I,M.PC-MTBL
	BRA	ATSNT1
MDTBL:	.BYTE	M.HR-MTBL,INST-MTBL,M.CF-MTBL,M.HT-MTBL,M.BX-MTBL,M.HR-MTBL
	.BYTE	M.SY-MTBL,M.BE-MTBL,M.PP-MTBL,M.PG-MTBL,M.BH-MTBL

	.SBTTL	CAR MOTION
CARMOV:	LDAA	X,CHPOS
	STAA	D,L
	LDAA	X,CVPOS
	CMPA	I,66		;ROOM FOR HIGH WHEELY
	BLE	HIWLRT		;YES, CONTINUE
	LDAB	X,STAT
	ANDB	I,34
	CMPB	I,14		;IS CAR IN HIGH WHEELY
	BNE	HIWLRT		;NO, CONTINUE
	LDAA	I,66		;KEEP AWAY FROM RAIL
HIWLRT:	ADDA	I,11
	STAA	D,K
	LDX	I,TPOS0
	LDAB	D,CARNO
	BEQ	1$
	LDX	I,TPOS2
1$:	LDAB	I,74		;STRIP NUMBER X 4
VRLOOP:	LDAA	D,K
	SBA			;IS CAR ANYWHERE IN THIS STRIP
	BMI	GDBND		;IF BELOW JUST POINT TO GUARDBAND
	CMPA	I,31
	BGT	GDBND		;IF ABOVE POINT TO GUARD BAND
	LDAA	D,K		;GET BACK CAR POSN.
	SUBA	I,37		;ADJUST FOR NATIVE POSITION OF CAR
VRSTOR:	PSHA			;SAVE VERT DISP.
	LDAA	D,L		;GET CARS HORIZ. DISP.
GBSTOR:	STAA	X,0
	LSRA
	LSRA
	LSRA
	LSRA
	STAA	X,1
	PULA			;GET VERT DISP. BACK.
	STAA	X,2
	LSRA
	LSRA
	LSRA
	LSRA
	STAA	X,3
	INX
	INX
	INX
	INX
	SUBB	I,4
	BPL	VRLOOP
	LDX	D,CARPTR	;RESTORE INDEX REG
	RTS
GDBND:	CMPB	I,50		;TOP NATIVE CAR STRIP
	BGT	STRPH1		;STRIP IS ABOVE CAR
	CMPB	I,20		;BOTTOM NATIVE CAR STRIP
	BLT	STRPLO		;STRIP IS BELOW CAR
NOROOM:	TBA
	SUBA	I,41		;POINT TO WHITE ABOVE CAR.
	BRA	VRSTOR
STRPH1:	LDAA	D,K		;VERT POSN
	CMPA	I,57		;BOTTOM OF BANNER
	BGT	NOROOM		;NO ROOM FOR TOP BANNER.
BANNER:	LDAA	I,8.
	PSHA
	BRA	GBSTOR
STRPLO:	TST	E,TREE		;CHECK FOR ATTRACT MODE.
	BEQ	BANNER		;IF SO SHOW BOTTOM BANNER.
	LDAA	D,K		;ELSE CHECK VISIBILITY OF TOP BANNER
	CMPA	I,57
	BLE	NOROOM		;IF SEEN ON TOP, LEAVE BOTTOM ALONE.
	LDAA	I,-50		;ELSE SHOW TOP IN BOTTOM.
	PSHA
	LDAA	I,8.
	BRA	GBSTOR
CKS14:	.BYTE	247

	.SBTTL	HORIZ. MOTION
HMOV:	LDAB	X,VEL
	CLRA
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	STAA	X,DLTARP
	ADDB	X,RODPOS+1
	ADCA	X,RODPOS
	STAB	X,RODPOS+1
	STAA	X,RODPOS
	LDAB	X,DIST
	ADCB	I,0
	STAB	X,DIST
	ANDA	I,340
	LSRB
	ANDB	I,37
	STAB	D,K
	ORAA	D,K
	RORA
	RORA
	RORA
	RORA
	RORA
	STAA	X,CRUDST
	LDAB	X,VEL
	LSRB
	LSRB
	LSRB
	LSRB
	ABA
	COMA			;NEGATIVE TO MOVE RIGHT.
	STAA	X,CHPOS
	RTS

	.SBTTL	VERT. MOTION
VMOV:	LDAA	X,STW
	ASRA
	STAA	D,K
	CLRA
	LDAB	X,DLTARP
	BEQ	ADCVP
RMLP:	ADDA	D,K		;DLTARP*STW/2
	DECB
	BNE	RMLP
	ASRA			;ORIGINAL SPEED***
	RORB
	ASRA
	RORB
	ASRA
	RORB
	ASRA
	RORB
ADCVP:	ADDB	X,CVPOS+1	;ADD TO VERT POSN.
	ADCA	X,CVPOS		;DOUBLE PRECISION
	PSHA
	LDAA	X,SOUND1
	ANDA	I,277
	STAA	X,SOUND1
	PULA
	CMPA	I,15
	BGE	1$
	BSR	FRICT
	LDAA	I,15
	CLRB			;LOWER FENCE
1$:	CMPA	I,77
	BLE	2$
	BSR	FRICT
	LDAA	I,77		;UPPER FENCE
	LDAB	I,377
2$:	STAA	X,CVPOS
	STAB	X,CVPOS+1
	RTS

FRICT:	LDAB	X,CRUDST
	CMPB	I,FINISH
	BHI	2$
	LDAB	X,SOUND1
	ORAB	I,100
	STAB	X,SOUND1	;TURN ON SCREECH
	CMPA	I,40		;A HAS VERT POSN
	LDAB	X,TSTW		;SET N CLEAR V LEAVE C
	BCS	5$		;IF A<40 CHECK PLUS
	CMPB	I,10
	BLE	4$
	LDAB	I,10
4$:	STAB	X,TSTW
	LDAB	X,ERPM
	SUBB	I,20		;SLOW HIM DOWN
	BCC	1$
	LDAB	I,10		;LEAVE SOME STEERAGE
1$:	STAB	X,ERPM
2$:	RTS
5$:	CMPB	I,-10
	BGE	4$
	LDAB	I,-10
	BRA	4$
	.SBTTL	ROAD MOTION
RODMOV:	LDAA	X,RODPOS
	LDX	I,RPOS1
	LDAB	D,CARNO
	BNE	S,+5
	LDX	I,RPOS3
	BSR	STR
	ADDA	I,20		;OFFSET RAILS
	LDX	I,RPOS2
	LDAB	D,CARNO
	BNE	S,+5
	LDX	I,RPOS4
	BSR	STR
	LDX	D,CARPTR
	RTS

STR:	TAB
	LSRB
	LSRB
	LSRB
	LSRB
	STAA	X,0
	STAB	X,1
	STAA	X,4
	STAB	X,5
	STAA	X,10
	STAB	X,11
	STAA	X,14
	STAB	X,15
	RTS
	.PAGE
	.SBTTL	V-BLANKING
BTDCVT:	LDAB	I,-1		;CONVERTS BINARY (A) TO DECIMAL (A&B)
1$:	INCB
	SUBA	I,100.
	BCC	1$		;'BLO', AFTER SUBA CARRY=BORROW
	ADDA	I,100.		;RESTORATIVE DIVISION, WORK ON IT ***
	PSHB
	LDAB	I,360		;START 1 OFF
2$:	ADDB	I,20		;10 HEX
	SUBA	I,10.
	BCC	2$
	ADDA	I,10.
	ABA
	TAB
	PULA
	RTS
DET:	CMPA	I,152.
	BCC	DETRET
	BSR	BTDCVT
	PSHB
	LDAB	I,40
	BSR	DNUM1
	PULA
	BSR	DNUM
	STAA	X,0
	DEX
	LDAA	I,116
	ABA
	STAA	X,0
DETRET:	RTS
DNUM:	PSHA
	LSRA
	LSRA
	LSRA
	LSRA
	ABA
	STAA	X,0
	PULA
	INX
DNUM1:	ANDA	I,17
	ABA
	STAA	X,0
	INX
	RTS
VBRTN:	CLR	E,FRFLG
	LDX	I,PLAY+230
	LDAA	D,ET
	BSR	DET		;CONVERT TO DECIMAL AND DISPLAY
	LDX	I,PLAY+20
	LDAA	D,RECLOW	;RECORD LOW
	BSR	DET
1$:	LDX	I,PLAY+50
	LDAA	D,ET+2
	BSR	DET
	LDX	I,PLAY+34
	LDAA	D,RECLOW+2
	BSR	DET
2$:	LDX	I,STAMP1-21
	LDAA	D,PICT2
	BEQ	STCR2		;GET RID OF W'S
	STAA	X,20
	LDAA	D,PICT2+1
	STAA	X,21
	LDAA	D,PICT2+2
	STAA	X,22
	EORA	I,321		;D1 WHEELY PIECE
	BITA	I,277		;IN EITHER FORM
	BNE	3$		;IF NOT, MAKE WHITE
	ORAA	I,233		;ELSE MAKE FRONT WHEEL TO MATCH
	BRA	4$
3$:	LDAA	I,WHITE
4$:	STAA	X,2
STCR2:	LDAA	D,PICT1
	BEQ	STXM
	STAA	X,200
	LDAA	D,PICT1+1
	STAA	X,201
	LDAA	D,PICT1+2
	STAA	X,202
	EORA	I,321		
	BITA	I,277
	BNE	1$
	ORAA	I,233
	BRA	2$
1$:	LDAA	I,WHITE		;NO, JUST BLANK IT
2$:	STAA	X,162
STXM:	LDAA	D,TREE
	LDX	I,XMTREE
TRLOOP:	LDAB	I,BLACK
	ASLA
	BCC	S,+4
	LDAB	I,BALL
	STAB	X,0
	INX
	CPX	I,XMTREE+6
	BNE	TRLOOP
	JSR	E,VBEXT		;ANY EXTRA VERT BLK TASKS.
	LDX	D,TIME
	INX			;DO A D.P. INCREMENT.
	STX	D,TIME
VBRET:	RTS

	.SBTTL	INTERRUPT
INTEN:	TSX
	LDAA	X,5		;CHECK PCH.
	CMPA	I,20		;IN PROGRAM AREA?
	BCC	2$		; 'BHS', OK SO FAR.
1$:	SWI
2$:	CMPA	I,37
	BHI	1$		;NO, A BOMB-OUT
	INC	E,FRFLG
	BMI	1$		;1/2 SEC. WITHOUT V-BLANKING!
	LDAB	E,LTEST		;CHECK WHO WOKE US UP
	CMPB	I,17		;0F HEX
	BNE	S,+5
	JSR	E,VBRTN		;IF WE ARE IN VBLANKING
	BSR	RSTRG
	JSR	E,COINS
	BSR	RSWT
	BSR	SNDAVG
	RTI


	.SBTTL	READ SWITCHES
RSWT:	LDX	I,ACEL1+7
	LDAA	I,377
	TAB
	SEC
RSLOOP:	RORA
	RORB
	ANDA	X,0
	ANDB	X,10
	DEX
	CPX	I,ACEL1-1
	BNE	RSLOOP
	COMA
	COMB
	STAA	D,SWT+2
	STAB	D,SWT
	RTS

	.SBTTL	READ STEERING
RSTRG:	LDAA	E,STRG		;GET NEW STEERING WD.
	STAA	D,M		;SAVE FOR LATER.
	EORA	D,OSTRG		;SEE WHAT CHANGED
	BEQ	SDONE		;IF NOTHING CHANGED, JUST GO BACK.
	TAB
	ASLA
	ANDA	I,373		;STOP CARRIES FROM RIGHT TO LEFT.
	ABA			;THIS IS AN OR, IF ONLY ONE BIT CHANGED.
	LDAB	D,M
	ASLB
	EORB	D,OSTRG
	BITA	I,2		;SEE IF WHEEL 1 CHANGED.
	BEQ	HIWHL		;IF NOT, TRY WHEEL 2.
	PSHA
	LDAA	D,TSTW+2
	BITB	I,2		;CHECK FORWARD/BACKWARD.
	BEQ	INCSW1
DSTW1:	DECA
	CMPA	I,-40
	BGT	S,+7
INCSW1:	INCA
	CMPA	I,40
	BGT	DSTW1		;SOFTWARE STOPS FOR STEERING
	STAA	D,TSTW+2
	PULA
HIWHL:	BITA	I,10
	BEQ	SDONE
	LDAA	D,TSTW
	BITB	I,10
	BEQ	INCSW2
DSTW2:	DECA
	CMPA	I,-40
	BGT	S,+7
INCSW2:	INCA
	CMPA	I,40
	BGT	DSTW2
	STAA	D,TSTW
SDONE:	LDAA	D,M
	STAA	D,OSTRG
	RTS
CKS16:	.BYTE	330

	.SBTTL	MOTOR SOUNDS
SNDAVG:	LDAA	D,SAVG
	INCA
	ANDA	I,7
	STAA	D,SAVG
	TAB
	TST	E,GEAR+2	;NO AVERAGING IN NEUTRAL
	BNE	S,+3
	CLRA
	TST	E,GEAR
	BNE	S,+3
	CLRB
	ADDB	D,ERPM
	BCC	S,+3		;IF WE DIDN'T WRAP, JUST OUTPUT.
	COMB			;ELSE SET BACK TO HIGHEST RPM.
	ADDA	D,ERPM+2
	BCC	S,+3
	COMA
	LDX	I,MSPD1
	LSRA			;SHIFT OUT BOTTOM BITS
	LSRA
	LSRA
	LSRB
	LSRB
	LSRB
	ORAA	D,SOUND1+2	;ADD SOUNDS FOR THIS LATCH.
	ORAB	D,SOUND1
	EORA	I,77		;SOME ARE ASSERTED LOW
	EORB	I,77
OSL:	STAA	X,0		;BOTTOM BIT GOES TO LATCH
	LSRA
	STAB	X,MSPD2-MSPD1	;DISPLACE TO SECOND SET OF LATCHES
	LSRB
	INX
	CPX	I,MSPD1+8.
	BEQ	SNDS2
	CPX	I,MSPD1+16.
	BNE	OSL
	RTS
SNDS2:	LDAA	D,DRIVER+2
	COMA
	ANDA	I,200
	ORAA	D,SOUND2+2
	LDAB	D,DRIVER
	COMB
	ANDB	I,200
	ORAB	D,SOUND2
	EORA	I,107
	EORB	I,127
	BRA	OSL

	.SBTTL	ENGINE
CLUTCH:	PSHA
	LDAB	X,LVEL
	SBA
	RORA
	STAA	X,MSMTCH
	BMI	SLODWN		
	CMPA	I,4
	BLS	CLEAN
	TBA
	LDAB	X,GEAR
	NEGB
	ASLB
	ADDB	X,ERPM		;SUBTRACT TWICE GEAR # FROM RPM
	BCS	S,+3		;IF RESULT >= 0
	CLRB			;ELSE B:=0
	STAB	X,ERPM
	INCA
	BRA	CHRET
SLODWN:	CMPA	I,373		;SMALL NEG #
	BHI	CLEAN
	TBA
	LDAB	X,GEAR
	ASLB
	ADDB	X,ERPM
	BCC	S,+4		;IF NO WRAP
	LDAB	I,376		;ELSE LIMIT
	STAB	X,ERPM
	TSTA
	BEQ	CHRET
	DECA
CHRET:	INS			;THROW AWAY PROP. NEW VEL.
	RTS
CLEAN:	PULA			;REGEN. NEW VEL
	RTS

DOWN:	ADDB	I,-4
	BCS	S,+3		;IF A WAS > = 4
	CLRB			;IF A WRAPPED JUST NOW
	BRA	SPLST

D1:	LDAA	I,2		;RESET LOAD
	STAA	X,LOAD
	TSTB
	BEQ	SPLST
	DECB
	BRA	SPLST
ENGINE:	LDAB	X,ERPM
	LDAA	X,GEAR	
	BNE	INGR
	TST	X,STAT
	BMI	DOWN
	ORAB	I,2
	LDAA	D,TIME+1
	BITA	I,3		;GIVE PLAYER A CHANCE
	BNE	SPLST		;ONLY REV EVERY 4TH FRAME.
	TBA
	LSRA
	ABA
	TAB			;EXPONENTIAL REV'S
	BCC	SPLST
	LDAB	I,377
	BRA	SPLST
INGR:	ASLA
	INC	X,LOAD
	CMPA	X,LOAD
	BGT	SPLST
	TST	X,STAT
	BMI	D1
	CMPB	I,POWBND	;RPM IN POWER BAND
	BLS	1$		;NO, TOO LOW
	CMPB	I,VLVFLT	;CHECK TOO HIGH
	BLS	EACEL		;NOPE, JUST RIGHT
1$:	ORAA	X,LOAD		;ELSE WAIT
	BITA	I,1		;FOR 1 MORE FRAME
	BEQ	SPLST
EACEL:	LDAA	I,2
	STAA	X,LOAD
	INCB
	BNE	SPLST
	COMB
SPLST:	STAB	X,ERPM
	LDAA	X,GEAR
	BNE	INGEAR
	LDAA	X,LVEL		;JUST PREV. VEL
	BRA	CLRTN		;COAST IN NEUTRAL
INGEAR:	LSRB
	LSRB
	STAB	D,K
	CLRB
1$:	ADDB	D,K
	DECA
	BNE	1$		;MULT ERPM * GEAR
	TBA
CLRTN:	JSR	E,CLUTCH
	STAA	X,LVEL
	RTS

	.SBTTL	V-BLANK
VBEXT:	LDAA	D,MTXT		;VALIDATE TEXT PTR
	LSRA			;LSB OF MSD IS DON'T CARE
	CMPA	I,MTBL/512.	;MSG. TABLE IN LAST ROM
	BNE	NXTMSG		;TRASH, GET NEXT MSG
	LDAA	I,0		;*** MSG SPEED PATCH
	STAA	D,M
VBELOP:	LDX	D,MTXT		;ADH OF TABLE+MSG #
	LDAA	X,MTBL&255.	;GET CHAR, OFFSET IS ADL OF TABLE
	CMPA	I,200		;CHECK EOL
	BNE	1$
	LDAA	I,WHITE		;ELSE SUB. BLANK
	DEX			;BACK UP PTR
1$:	INX			;ON TO NEXT CHAR.
	STX	D,MTXT		;SAVE SOURCE PTR
	LDAB	I,12		;INSURANCE, TXT POS
	STAB	D,TXTPOS	;MUST BE IN PLAYFIELD
	LDX	D,TXTPOS	;GET DEST PTR
	CMPA	I,30		;CHECK BLACK BALL
	BNE	2$		;NO, JUST OUTPUT
	BSR	VBSUB		;ELSE SUBSTITUTE
2$:	STAA	X,1		;STORE CHAR
	INX			;BUMP PTR
	STX	D,TXTPOS	;SAVE IT
	LDAB	D,TXTPOS+1	;GET BOTTOM BYTE
	ANDB	I,17		;DON'T CARE WHICH STRIP
	CMPB	I,17
	BEQ	NXTMSG
	DEC	E,M
	BPL	VBELOP
	RTS
NXTMSG:	LDX	I,4		;SCAN 4 MSG'S
1$:	LDAA	X,BMSG-1	;GET MSG OFFSET
	COMA			;CHECK FOR FF
	BNE	2$		;IF NOT, IS REAL MSG.
	DEX			;ELSE KEEP SCANNING
	BNE	1$
	STX	D,MTXT		;CLEAR PTR
	RTS
2$:	COMA			;REGEN. OFFSET
	STAA	D,MTXT+1	;STORE IN MSG. PTR
	LDAA	I,MTBL/256.	;HIGH BYTE OF TABLE
	STAA	D,MTXT
	LDAA	I,255.
	STAA	X,BMSG-1	;ACKNOWLEDGE
	STX	D,TXTPOS	;SAVE SLOT PTR
	LDAA	I,MPTBL-1/256.
	STAA	D,TXTPOS
	LDX	D,TXTPOS
	LDAA	X,MPTBL-1&255.
	STAA	D,TXTPOS+1
	RTS
VBSUB:	CPX	I,5105		;POSN FOR 'SCORE TO BEAT'
	BEQ	1$
	BSR	HEATNO
	RTS
1$:	BSR	BONCAL
	JSR	BTDCVT		;CONVERT TO DECIMAL
	TBA			;LOW DIGITS ARE OF INTEREST
	LSRB
	LSRB
	LSRB
	LSRB
	STAB	X,1
	INX
	LDAB	I,116
	STAB	X,1
	INX
	ANDA	I,17
	RTS
VBXRET:	RTS
MPTBL:	.BYTE	340,260,160,100
HEATNO:	LDAA	D,SWT		;GET OPTION SWITCHES
	ANDA	I,3		;MASK
	LSRA			;EACH SWITCH ADDS A HEAT
	ADCA	I,3		;BASIC # OF HEATS
	RTS
BONCAL:	LDAA	D,SWT+2
	ANDA	I,3		;CHECK BONUS OPTION
	BEQ	BCRET
	TAB
	ASLA
	ASLA
	ABA
	ASLA			;10,20, OR 30 HERE
	ADDA	I,39.
BCRET:	RTS
	.PAGE
	.SBTTL	AUTO DRIVE
DRIVE:	LDAA	X,STAT
;STAT BIT ASSIGNMENTS
;	7    - ACEL	0=ON  1=OFF
;	6    - CHUTE LATCH  0=ON
;	5    -LYLE'S LATCH (OWEN DEFEAT)
;	4    -READ 3-0 AS:BELOW IF 0,PICTURE # IF 1. 
;	3,2  - TILT	00=FLAT
;			01=DIPPED
;			10=LOW WHEELY
;			11=HIGH WHEELY
;	1,0  - SMOKE	0=NONE 1,2,3 MORE
	LDAB	X,DRIVER	;DO WE DRIVE THIS CAR
	BEQ	NDRET		;NO, PLAYER DOES
	BPL	STAGE		;+=NON ZERO, HE'S BEING HELD
	LSRB			;SAVE BEATEN BIT
	LDAB	D,CASE		;ATTRACT?
	BEQ	DRAT		;DRIVE IN ATTRACT
	LDAB	D,TREE		;LOOK AT LIGHTS
	BITB	I,40		; GREEN ON,YELLOW OFF?
	BNE	RUN
STAGE:	LDAB	I,2		;SECOND FOR SLUGGISHNESS
	BCS	GOFF		;IF UNBEATEN
	CLRB
	BRA	GOFF		;GAS OFF, CHUTE OFF
DRAT:	TST	E,CARNO
	BNE	STAGE		;CAR 2 STANDS STILL IN ATTRACT
RUN:	LDAB	X,GEAR
	BNE	INGEER
	TST	X,ERPM
	BPL	INGEER
SHIFT:	CMPB	I,3
	BHI	GOFF
	INCB
GOFF:	ORAA	I,300		;GAS OFF, CHUTE OFF, FOR SHIFT
GRET:	PSHB
	LDAB	X,CRUDST
	CMPB	I,FINISH
	PULB			;NO EFFECT ON CC
	BLS	1$		;NOT AT FINISH YET
	CLRB			;NEUTRAL
	ORAA	I,200		;GAS OFF
	ANDA	I,277		;CHUTE ON
1$:	STAB	X,GEAR
	STAA	X,STAT
	RTS
INGEER:	PSHB			;SAVE GEAR
	LDAB	X,ERPM
	CMPB	I,SHFTPT	;HAVE WE REVVED TO SHIFT POINT
	PULB			;GET BACK GEAR, LEAVE COND. CODES ALONE
	BHI	SHIFT
	ANDA	I,177		;GAS ON
	ORAA	I,100		;CHUTE OFF
	BRA	GRET
NDRET:	LDAB	D,TREE		;HAS RACE BEGUN?
	BEQ	STAGE		;NO,HOLD HIM SO MESSAGES ARE SAFE
	LDAB	X,SWT
	ORAA	I,200		;PRESET ACEL OFF
	ANDB	I,200
	ABA			;COPY GAS PEDAL
	LDAB	X,VEL		;SEE IF HE'S MOVING.
	BNE	STRAN		;IF SO LET STEERING BE.
	ANDA	I,337		;CLEAR LYLE LATCH
	STAB	X,TSTW		;ELSE CLEAR OUT NOISE.
STRAN:	LDAB	X,TSTW
	STAB	X,STW
	JSR	E,STWKCK
	CLRB			;DEFAULT NEUT.
	PSHA			;SAVE STAT
	LDAA	X,SWT		;GET GEAR SWITCHES
	ANDA	I,170
	BEQ	2$		;IF NONE ON WE'RE DONE
1$:	INCB			;ELSE SCAN DOWN LOOK FOR GEAR
	ASLA
	BPL	1$
2$:	PULA			;GET STAT
	CMPB	X,PGEAR		;PROPOSED GEAR DEBOUNCE
	BEQ	3$		;SEEN TWICE NOW, USE IT
	STAB	X,PGEAR		;NOT LIKE LAST ONE, SAVE IT
	LDAB	X,GEAR		;AND USE OLD GEAR
3$:	TSTB			;GOING INTO NEUTRAL?
	BNE	4$		;NO, PROCEED
	BITA	I,40		;YES, CHECK LYLE-LATCH
	BEQ	GRET		;YES, ALLOW IT
	LDAB	X,GEAR
4$:	CMPB	I,4
	BNE	GRET
	ORAA	I,40		;SET LYLE LATCH
	LDAB	X,ERPM		;IN FOURTH CHECK REVS
	CMPB	I,RDLIN-2
	BLS	5$		;NO DANGER LET HIM GO
	ORAA	I,200		;GAS OFF
5$:	LDAB	I,4		;GEAR BACK
	BRA	GRET
CKS18:	.BYTE	366
	.SBTTL	KICK STEERING
STWKCK:	PSHA
	LDAA	D,TIME+1
	BITA	I,77		;ONLY EVERY 64 FRAMES
	BNE	STKRET
	LDAB	I,2
	PSHB
	LDAA	X,CRUDST
	LDAB	D,CRUDST
	TST	E,CARNO
	BNE	S,+4
	LDAB	D,CRUDST+2
	CBA
	PULB
	BHI	S,+3
	ASRB
	LDAA	D,POLY
	BNE	S,+3
	COMA
	ASLA
	EORA	D,POLY
	ASLA
	ASLA
	ROL	E,POLY
	LDAA	D,POLY		;RANDOM #
	BMI	S,+3		;WHICH DIR. TO KICK.
	NEGB
	ADDB	X,TSTW
	STAB	X,TSTW
STKRET:	PULA
	RTS

	.SBTTL	PICTURES
PICT:	LDAA	X,STAT		;1 FIELD OUT OF PHASE ***
	BITA	I,20		;SPECIAL WHEN LIT.
	BNE	PDECOD		;'JUST DECODE' SPECIAL.
	BITA	I,3		;SMOKE?
	BEQ	PDRET
	LDAB	X,SOUND1
	ORAB	I,100		;TURN ON SCREECH.
	STAB	X,SOUND1	;(VMOV TURNS IT OFF***)
PDRET:	LDAB	X,MSMTCH	;NO, DO NORMAL ANIMATION.
	CMPB	I,2
	BGT	WHLPCT
	CMPB	I,-4
	BLE	DIPPCT
	BITA	I,14		;IS CAR FLAT
	BEQ	FLAT
	BITA	I,10		;IS IT IN WHEELY
	BEQ	S,+4
	SUBA	I,4		;HIGH>LOW, LOW>DIP
	ANDA	I,373		;DIP>FLAT
FLAT:	BITA	I,3		;SMOKE?
	BEQ	DECODE		;NO SMOKE
	LDAB	D,TIME+1
	BITB	I,3		;DEC EVERY FOURTH FRAME
	BNE	DECODE
	DECA
DECODE:	STAA	X,STAT
	LDAA	D,TIME+1
	ASLA
	ORAA	D,TIME+1
	ORAA	I,14		;MASKS SMOKE ON EVEN FRAMES
	ANDA	X,STAT
PDECOD:	ANDA	I,37		;ISOLATE PICT#
	CMPA	I,8.		;CHECK WHEELY OR ABOVE
	BMI	1$		;BELOW LEAVE ALONE
	ADDA	I,4		;ELSE BYPASS OLD LOW WHEELY
1$:	TAB
	ABA
	ABA			;MULT. BY 3
	CLRB
	ADDA	I,PCTBL&255.
	STAA	D,TBLPTR+1
	ADCB	I,PCTBL/256.
	STAB	D,TBLPTR
	LDX	D,TBLPTR
	LDAA	X,0
	STAA	D,K
	LDAA	X,1
	STAA	D,L
	LDAA	X,2
	BSR	SQORND
	LDX	D,CARPTR
	BEQ	2$
	INX
2$:	STAA	X,PICT1+2
	LDAA	D,L
	STAA	X,PICT1+1
	LDAA	D,K
	STAA	X,PICT1
	LDX	D,CARPTR
	RTS
DIPPCT:	BITA	I,10		;WE'RE GOING TO DIP. WHEELY?
	BEQ	FRFLT		;NO
	EORA	I,14		;HIGH>FLAT,LOW>DIP
	BRA	INCSMK
FRFLT:	ORAA	I,4		;DIP IT IF NOT ALREADY
INCSMK:	LDAB	I,1		;PRESET FOR INCREMENT
	COMA
	EORB	D,TIME+1	;ODD FRAME NO INC.
	ANDB	I,1		;GET RID OF TIME TRASH
	BITA	I,3		;CHECK FOR MAX SMOKE
	BNE	S,+3
	CLRB			;MAX ALREADY, NO INC.
	COMA
	ABA
	BRA	DECODE
WHLPCT:	CMPB	I,10
	BLS	SMKON
	CMPB	I,20
	BLS	MLO
	CMPB	I,30
	BLS	ALO
	CMPB	I,40
	BLS	MHI
	BITA	I,10		;CHECK ALREADY WHEELY
	BNE	S,+8.		;YES ALREADY
	ORAA	I,10
	ANDA	I,373		;NO, MAKE IT A LOW ONE
	BRA	INCSMK		;AND MAKE SMOKE
	BITA	I,4		;HIGH ALREADY?
	BNE	INCSMK		;YES, MORE SMOKE
	ORAA	I,4		;NO, MAKE IT HIGH
	BRA	DECODE		;BUT NO MORE SMOKE YET
MHI:	TAB
	COMB
	BITB	I,14		;IS IT HIGH
	BEQ	INCSMK		;YES, MORE SMOKE
ALO:	BITA	I,14
	BNE	S,+4
	ORAA	I,10		;FLAT>LOW
MLO:	ANDA	I,373		;DIP>FLAT, HIGH>LOW
	BRA	INCSMK
SMKON:	ANDA	I,363		;SET FLAT
	BRA	INCSMK
SQORND:	CMPA	I,301
	BNE	SQSPEC		;RETURN IF FRONT WHEELS NOT NORMAL.
	LDX	D,CARPTR
	TST	X,VEL		;STOPPED
	BEQ	SQRET		;YES, LEAVE ROUND
	LDAB	I,10
	BITB	X,RODPOS
	BEQ	SQRET
	LDAB	I,300		;PLAIN REAR HALF
	CMPB	D,L
	BNE	S,+6		;IF SMOKE, LEAVE REAR ALONE.
	LDAA	I,302		;ELSE MAKE SQUARE.
	STAA	D,L
	LDAA	I,303
SQRET:	RTS
SQSPEC:	LDAB	D,TIME+1	;THIS RTN. FLASHES SPECIALS
	BITB	I,4
	BNE	SQRET
	LDAA	D,L
	EORA	I,100		;INVERT PICT
	STAA	D,L
	LDAA	D,K
	CMPA	I,WHITE
	BEQ	S,+6		;DON'T INVERT WHITE.
	EORA	I,100
	STAA	D,K
	LDAA	X,2
	EORA	I,100
	RTS
PCTBL:	.BYTE	WHITE,300,301	;FLAT
	.BYTE	WHITE,310,301	;SMOKE 1
	.BYTE	313,311,301	;SMOKE 2
	.BYTE	314,311,301	;SMOKE 3
	.BYTE	WHITE,327,330	;DIPPED
	.BYTE	WHITE,337,330
	.BYTE	213,335,330
	.BYTE	214,335,330
	.BYTE	WHITE,304,305	;OLD LOW WHEELY***
	.BYTE	WHITE,334,305
	.BYTE	313,312,305
	.BYTE	314,312,305
	.BYTE	WHITE,306,307	;LOW WHEELY
	.BYTE	WHITE,332,307
	.BYTE	336,332,307
	.BYTE	214,332,307
	.BYTE	WHITE,320,321	;HIGH WHEELY
	.BYTE	WHITE,222,321
	.BYTE	236,222,321
	.BYTE	314,222,321
	.BYTE	WHITE,316,301	;BLOW-UP, STAGE 1
	.BYTE	WHITE,317,301	;STAGE 2
	.BYTE	WHITE,315,301	;STAGE 3
	.BYTE	324,323,301	;CHUTE 1
	.BYTE	325,323,301	;CHUTE 2
	.BYTE	326,323,301	;CHUTE 3
	.BYTE	331,323,301	;LIMP CHUTE

	.SBTTL 	START BUTTONS
INST1:	LDAA	I,M.GL-MTBL
	LDAB	I,M.WF-MTBL
	LDX	D,TIME
	DEX			;CHEAP CHECK FOR FRAME 1
	BEQ	2$
	CPX	I,440		;END OF 'WAIT FOR GREEN LIGHT'
	BNE	3$
1$:	LDAA 	I,3		;START THE TREE
	STAA	D,TREE
	CLRA
	INC	E,CASE		;CASE=2, START THE TREE
	CLRB
	STAA	D,ET
	STAA	D,ET+2
2$:	STAB	D,TMSG
	STAB	D,TMSG+2
	STAA	D,BMSG
	STAA	D,BMSG+2
3$:	TST	E,HEAT
	BNE	4$
	JMP	CKSTSW
4$:	JMP	WAIT


STARTQ:	LDAA	D,CREDIT
	BNE	2$		;HAS MONEY, PROCEED, ELSE TURN LAMP OFF
1$:	ANDA	I,200		;ISOLATE FLASHING BIT
	LDAB	X,SOUND2
	ANDB	I,30		;ALLOW MOTOR ON,SOUND ON
	ABA
	STAA	X,SOUND2
	RTS
2$:	LDAA	X,DRIVER	;WHO IS DRIVING
	BPL	1$		;ALREADY DRIVING
	ASLB			;START SWITCH INTO CARRY
	ROL	X,STSW		;INTO DEBOUNCE WD
	LDAB	X,STSW
	COMB			;ALL ONES BECOMES 0
	BEQ	3$		;BUTTON DOWN
	LDAA	D,TIME+1	;ELSE FLASH LAMP
	ASLA			;BY SHIFTING BIT 3
	ASLA			;OF TIME (4 HZ) INTO
	ASLA			;SIGN OF ACCA
	ASLA
	BRA	1$		;AND EXITING
3$:	CLR	X,DRIVER	;PUT PLAYER IN COMMAND
	JSR	CHARGE		;TAKE HIS MONEY
	LDAA	D,DRIVER
	ORAA	D,DRIVER+2
	BPL	1$		;NOT FIRST PLAYER, RETURN
RSTART:	CLRA
	STAA	D,SOUND1
	STAA	D,SOUND1+2
	INCA			;MAKE A ONE 
	STAA	D,CASE		;FOR CASE OF TIMER
	LDAA	I,30		;MOTOR ON, SOUND ON
	STAA	D,SOUND2
	STAA	D,SOUND2+2
	JSR	INIT		;INITIALIZE A BUNCH OF STUFF 
	TST	X,DRIVER	;INIT LEAVES X=0
	BMI	1$
	CLR	X,DRIVER	;MAKE SURE HOLD FLAG IS CLEAR
1$:	TST	X,DRIVER+2
	BMI	2$
	CLR	X,DRIVER+2
2$:	RTS
CKS1A:	.BYTE	300
	.SBTTL	BLOW ENGINE
BLOW:	PSHA
	LDAA	X,SOUND1
	ANDA	I,337		;TURN OFF BLOW-UP, IF ON
	STAA	X,SOUND1
	LDAA	X,STAT
	PSHA
	ANDA	I,37		;ISOLATE PICT
	CMPA	I,BLO1		;ALREADY BLOWING
	BMI	NBYET		;NOT YET
	CMPA	I,BLO1+2
	BMI	BLSEQ
	BGT	NBYET
	DEC	X,BLTIM
	BPL	BLORET
	LDAB	X,BLTIM
	CMPB	I,-100
	BGT	BLORET
	CLR	X,REVINT
	CLR	X,REVINT+1
	CLR	X,TMSG
	CLR	X,DRIVER
	CLRA
	BRA	BLORET
BLSEQ:	DEC	X,BLTIM		;BUMP TIMER
	BNE	BLORET		;NO TIMEOUT?  RETURN
	INCA			;NEXT PICT.
BLSRET:	LDAB	I,16
	STAB	X,BLTIM		;RESET TIMER
BLORET:	PULB			;GET STAT BACK
	ANDB	I,340		;THROW AWAY OLD PICT.
	ABA			;SPLICE IN NEW PICT.
	STAA	X,STAT
	CLR	X,ERPM		;NO REV'S WITH A ROD THROWN
	CLR	X,LVEL		;NO SPEED EITHER
	PULA
	RTS
NBYET:	LDAA	I,BLO1
	LDAB	X,SOUND1
	ORAB	I,40		;TURN ON BLOW-UP SOUND
	STAB	X,SOUND1
	INC	X,DRIVER		;SET +, NON ZERO TO HOLD
	LDAB	I,BEMSG-MTBL		;OUTPUT BLOWN ENGINE MESSAGE.
	STAB	X,TMSG
	BRA	BLSRET

	.SBTTL	XMAS TREE
XMTRTN:	LDAB	D,TREE
	LDX	D,CARPTR	;DO TREE ONCE PER FRAME
	BEQ	XMRET		;AT END OF FRAME, NOT MIDDLE
	LDAA	D,TIME+1
	ANDA	I,37		;32 TICKS, ABOUT HALF A SECOND
	BEQ	XMTDN		
	EORA	I,7		;MATCHES 7 TICKS PAST ABOVE
	BNE	XMRET
	LDAA	D,SOUND2
	ANDA	I,337		;TURN OFF LO TONE
	STAA	D,SOUND2
	LDAA	D,SOUND2+2
	ANDA	I,337		;TURN OFF HI TONE
	STAA	D,SOUND2+2
	ASLB
	ANDB	D,TREE		;TURNS LAST LIGHT OFF
	BITB	I,37		;CHECK FOR ALL YELLOWS OUT
	BEQ	XMEXIT		;YES, DONE WITH THE TREE
XMSRET:	STAB	D,TREE	
XMRET:	JMP	E,WAIT
XMTDN:	ASLB
	ORAB	D,TREE		;LIGHT UP NEXT ONE DOWN
	LDAA	D,SOUND2
	ORAA	I,40
	STAA	D,SOUND2	;TURN ON HI TONE
	BITB	I,40		;GREEN ONE?
	BEQ	XMSRET		;NO, JUST LIGHT IT UP
	LDAA	D,SOUND2+2
	ORAA	I,40
	STAA	D,SOUND2+2	;TURN ON LO TONE TOO.
	BSR	XMRDLT		;CHECK IF CAR 2 JUMPED
	LDX	I,0
	BSR	XMRDLT		;CHECK IF CAR 0 JUMPED
	BRA	XMSRET
XMEXIT:	INC	E,CASE		;XMTRTN>WAIT
	BRA	XMSRET
XMRDLT:	LDAA	X,RODPOS	;SEE IF HE JUMPED
	BNE	CHEAT
	LDAA	X,RODPOS+1
	BEQ	XMRDRT		;HE'S HONEST 
CHEAT:	CLR	X,RODPOS	;ELSE SET HIM BACK
	CLR	X,RODPOS+1
	CLR	X,DIST
	INC	X,DRIVER		;SET +, NON ZERO TO HOLD
	LDAA	X,STAT
	ORAA	I,200
	STAA	X,STAT		;SHUT OFF GAS
	LDAA	I,M.P-MTBL
	STAA	X,TMSG		;TELL HIM
	ORAB	I,100		;AND THE REST.
	CLR	X,LVEL		;STOP HIM
	CLR	X,ERPM		;AND HIS ENGINE
	LDAA 	I,120.		;FOR 1 SECOND,
	STAA	X,PENTIM
XMRDRT:	RTS
PNLTY:	TST	X,PENTIM
	BEQ	PENRET
	DEC	X,PENTIM
	BNE	PENRET
	CLR	X,DRIVER	;LET HIM GO
	CLR	X,TMSG		;LET HIM KNOW
	LDAB	I,40		;GREEN ALONE
	STAB	D,TREE
PENRET:	RTS

	.SBTTL	CHUTE SEQUENCE
CHUTE:	PSHA
	LDAA	X,STAT
	BITA	I,100		;CHECK CHUTE LATCH
	BNE	CHABT		;1=OFF, JUST RETURN
	ANDA	I,37		;ISOLATE PICT.
	CMPA	I,CHP1		;HAS SEQ. STARTED
	BMI	NCYET
	CMPA	I,CHP1+3
	BGT	NCYET
	DEC	X,CHUTIM
	LDAB	X,CHUTIM
	BMI	CHSTAB
CHPSEL:	LDAA	I,CHP1		;DEFAULT OF FIRST STAGE
	CMPB	I,20.		;TIME TO CHANGE
	BGT	CHOUT		;NO, LEAVE FIRST
	INCA			;YES, TRY SECOND
	PSHB
	LDAB	X,SOUND1
	ANDB	I,337
	STAB	X,SOUND1	;TURN OFF CRASH
	LDAB	X,SOUND2
	ORAB	I,2
	STAB	X,SOUND2	;AND DAMP IT NOW.
	PULB
	CMPB	I,10.
	BGT	CHOUT		;STICK WITH SECOND
	INCA			;MAKE IT THIRD
CHOUT:	LDAB	X,STAT
	ANDB	I,340
	ABA
	STAA	X,STAT
CHABT:	PULA
	RTS
NCYET:	BITA	I,20		;OTHER SPECIAL IN PROGRESS?
	BNE	CHABT		;YES, JUST RETURN
	LDAB	X,SOUND1
	ORAB	I,40		;START 'CRASH'
	STAB	X,SOUND1
	LDAB	I,30.	
	STAB	X,CHUTIM	;START HALF-SECOND TIMER
	BRA	CHPSEL		;DO PICTURE SELECTION.
CHSTAB:	LDAA	I,CHP1+3	;PREPARE TO RETURN LIMP CHUTE
	LDAB	X,LVEL
	BEQ	CHLRTN		;RETURN LIMP IF STOPPED
	TBA
	LSRA
	LSRA
	LSRA
	LSRA
	BNE	S,+3		;IF THAT IS TOO SMALL TO NOTICE,
	INCA			;JUST USE 1
	NEGA			;WE WANT TO REDUCE IT
	ADDA	X,LVEL		
	STAA	X,LVEL
	LDAA	I,CHP1+2	;SET FULL CHUTE
CHSTRT:	INC	X,CHUTIM		;KEEP 'EM COMING BACK
	BRA	CHOUT
CHLRTN:	LDAA	I,CHP1+3	;SET LIMP CHUTE
	BRA	CHSTRT
	.PAGE
	.SBTTL	SCORING AND END CHECK
ENDCHK:	LDAB	D,CARNO		;DO ONCE PER FRAME
	BEQ	2$		;AT END
	LDAA	D,TREE
	BITA	I,40		;GREEN LIGHT ON?
	BEQ	ATCHK		;NO, CHECK ATTRACT
	LDAA	D,ETCOM		;COMMON TIMER
	DEC	X,ETDIV-2	;X SHOULD BE 2 RIGHT NOW
	BPL	1$
	INCA
	STAA	D,ETCOM
	LDAB	I,ETFRCT-1
	STAB	D,ETDIV
1$:	LDX	I,0
	BSR	3$
	LDX	D,CARPTR	;HAD BETTER BE 2
	BSR	3$
	ORAB	D,STAT
	BITB	I,100		;BOTH DONE
	BNE	2$
	LDAB	I,4
	STAB	D,CASE
2$:	RTS
3$:	LDAB	X,STAT
	BITB	I,100
	BEQ	2$
	STAA	X,ET
4$:	CMPA	I,HTTIM
	BNE	2$
TIMOUT:	LDAA	I,M.S-MTBL		;'SLOW POKE'
	STAA	X,TMSG
	LDAB	I,200			;GAS OFF, CHUTE ON
	STAB	X,STAT
	CLR	X,GEAR
	LDAA	D,ETCOM
	RTS
ATCHK:	LDAA	D,STAT		;CHECK CAR 0
	ORAA	I,340
	CMPA	I,343+CHP1		;CHECK FOR LIMP CHUTE
	BNE	1$
	ANDA	I,340
	STAA	D,STAT
	CLRA
	STAA	D,RODPOS
	STAA	D,DIST
	STAA	D,GEAR
	STAA	D,ERPM
	STAA	D,LVEL
	STAA	D,CRUDST
1$:	RTS

COINS:	LDX	I,0
	TST	E,CONSW1	;- NO COIN, + COIN
	BSR	CONTST
	INX
	TST	E,CONSW2
	BSR	CONTST
	BSR	PRICE
	BNE	1$
	STAB	D,CREDIT	;ZERO, SO FAR
	BRA	CREDUP		;GETS BUMPED TO 2
1$:	LDAA	D,COINCT	;WHAT BID SO FAR
	ANDA	I,3		;HOLD IT DOWN
	SBA			;CHECK PRICE TAG
	BMI	CFINSH		;NOT ENOUGH MONEY
	STAA	D,COINCT	;CHARGE HIM
CREDUP:	INC	X,CREDIT-1	;RING UP SALE (X IS 1)
	LDAA	E,PRICEH	;LOW BUDGET?
	BMI	CFINSH
	INC	X,CREDIT-1	;TWO FOR ONE (X IS 1)
CFINSH:	LDAA	I,4		;NEW, CONSERVATIVE CREDIT LIMIT.
	CMPA	D,CREDIT
	BHI	S,+4
	STAA	D,CREDIT
	RTS
CONTST:	BMI	COIN01
	INC	X,TALY1
	BVC	COIN03
	COM	X,TALY1		;HOLD AT 128
	BRA	COIN03
COIN01:	LDAA	X,TALY1
	CLR	X,TALY1
	CMPA	I,3
	BLE	COIN03
	INC	E,COINCT
COIN03:	RTS
PRICE:	CLRB			;STARTING PRICE=0
	SEC			;HAVE A1 WAITING
	LDAA	E,PRICEH	;LDAA IS FASTER, LEAVES CARRY ALONE
	BPL	S,+3		;SKIP IF OFF
	ROLB			;ELSE UP ANTE
	LDAA	E,PRICEL
	BPL	S,+3
	ROLB
	TSTB
	RTS
CKS1C:	.BYTE	66

	.SBTTL MESSAGES
MTBL:	.BYTE	200
M.BX:	.MSG	BEAT-O-F0R
M.BH:	.MSG	-B0NUS-HEAT
M.HT:	.MSG	--O-HEATS
M.PG:	.MSG	--PER-GAME
M.1C:	.MSG	---1-C0IN
M.2C:	.MSG	--2-C0INS
M.PP:	.MSG	-PER-PLAYER
M.2P:	.MSG	--2-PLAYS
M.PC:	.MSG	--PER-C0IN
M.CF:	.MSG	-CREDIT-F0R
M.1P:	.MSG	-0NE-PLAYER
INST:	.MSG	0VER-REVS-CAN
M.BE:	.MSG	-BL0W-ENGINE
M.HR:	.MSG	HITTING-RAIL
M.SY:	.MSG	-SL0WS-Y0U
M.WF:	.MSG	-WAIT-F0R
M.GL:	.MSG	GREEN-LIGHT
BEMSG:	.MSG	ENGINE-BL0WN
M.W:	.MSG	-_-WINNER-_
M.S:	.MSG	-SL0W-P0KE
M.P:	.MSG	T00-S00N
WINNER:	LDAA	D,EHTIM
	BNE	WMDLY
	LDAA	D,ET
	CMPA	D,ET+2
	BHI	WIN1
	BCS	WIN2		;'BLO'
TOTALS:	LDAA	D,ET
	CMPA	D,RECLOW
	BCC	1$
	STAA	D,RECLOW
1$:	LDAA	D,ET+2
	CMPA	D,RECLOW+2
	BCC	2$
	STAA	D,RECLOW+2
2$:	CLRA			;***
	STAA	D,BMSG		;***
	STAA	D,BMSG+2	;***
	BRA	WMDLY
WIN1:	LDAA	I,M.W-MTBL
	STAA	D,TMSG+2
	LDAA	D,DRIVER
	ANDA	I,376
	STAA	D,DRIVER
	BRA	TOTALS
WIN2:	LDAA	I,M.W-MTBL
	STAA	D,TMSG
	LDAA	D,DRIVER+2
	ANDA	I,376
	STAA	D,DRIVER+2
	BRA	TOTALS
WMDLY:	LDAA	D,TIME+1
	LSRA			;DO ONLY EVERY OTHER FRAME
	BCS	WMEXIT
INCEHT:	INC	E,EHTIM
	BVS	HTCNT		;AT COUNT OF 128, CHECK HEAT #
	BEQ	NXTHT		;AT 0, START BONUS HEAT
WMEXIT:	JMP	E,WAIT
HTCNT:	JSR	E,HEATNO
	INC	E,HEAT
	CMPA	D,HEAT
	BEQ	BONHTQ
	BLS	EOG
NXTHT:	JSR	RSTART
	JMP	E,WAIT
BONHTQ:	JSR	E,BONCAL
	BEQ	EOG		;NO BONUS ALLOWED
	LDAB	D,DRIVER
	BMI	1$
	CMPA	D,RECLOW
	BHI	BONHT
1$:	LDAB	D,DRIVER+2
	BMI	EOG
	CMPA	D,RECLOW+2
	BCS	EOG		;'BLO'
BONHT:	LDAA	I,M.BH-MTBL
	STAA	D,TMSG
	STAA	D,TMSG+2
	BRA	INCEHT		;KICK EHTIM PAST 128.
EOG:	JMP	E,NPR		;RESET EVERYTHING BUT MONEY

	.SBTTL SELF-TEST
TROUT:	CLRA			;MAKE A ZERO
	LDX	I,128.		;128 BYTES OF RAM
1$:	STAA	X,177		;RAM STARTS AT 80 HEX
	DEX
	BNE	1$		;CLEAR RAM
	LDX	I,200		;RESET PTR.
	COMA			;MAKE BYTE OF ALL ONES
2$:	LDAB	X,177		;SEE IF LOC IS STILL 0
	BNE	ERROR		;IF NOT, IS AN ERROR
	STAA	X,177		;ELSE SET ONES TO CHECK DISTURB
	DEX
	BNE	2$		;REPEAT FOR WHOLE RAM
	LDAB	I,8.		;8 BITS TO CHECK DATA SHORTS
3$:	CMPA	D,200		;MEMORY SHOULD MATCH ACCA
	BNE	ERROR		;IF NOT, IS ERROR
	LSRA			;SHIFT BOTH BYTES
	LSR	X,200		;X IS ZERO, SO THIS IS "D,200"
	DECB			;COUNT BITS
	BPL	3$
	CLRA
	BRA	MEMRPT
ROMTST:	LDX	I,^H1200		;POINT TO START OF ROM
	CLRB			;WORD CNT.
ROMTLP:	CLRA			;ZERO INITIAL CKSUM
1$:	ADDA	X,0
	ADDA	X,1		;ADD IN TWO BYTES
	INX
	INX
	DECB
	BNE	1$		;REPEAT FOR 256 WDS, 512 BYTES
	SUBA	I,73.		;RESIDUE MOD 256 MUST BE 73(WHY NOT?)
	STAA	D,0		;FOR LOOKING AT WITH ANALYZER
	BEQ	MEMRPT
ERROR:	LDAA	I,200
MEMRPT:	TXS			;SAVE MEM PTR.
	LDX	I,SCRCH1
	ORAA	I,100		;TURN SOUND ON
	TAB
	EORB	I,200		;TONE2 IS OPP. OF TONE 1
1$:	STAA	X,0
	STAB	X,16.
	LSRA
	LSRB
	INX
	CBA			;ONLY EQUAL WHEN DONE
	BNE	1$
	LDX	I,0
2$:	DEX			;PAUSE
	BNE	2$
	STAA	E,TONE1		;TURN OFF TONES
	STAA	E,TONE2
3$:	DEX			;PAUSE
	BNE	3$
	TSX			;GET ORIG. MEM PTR
	CPX	I,10000
	BMI	ROMTST		;IF WE CAME OUT OF RAM
	CPX	I,^H2000	;END OF ROM?
	BNE	ROMTLP		;NO, KEEP ON
VIDTST:	CLRB			;TO CLEAN POSN
	LDAA	I,350
	LDX	I,PLAY
10$:	STAA	X,0		;CLEAR PLAY WITH E8'S
	INX
	STAA	X,255.		;8'S INTO POSN
	BITB	I,3
	BEQ	11$		;ALLOW THEM TO STAY IN HORIZ LSD.
	CLR	X,255.		;ELSE CLEAR THEM OUT
11$:	INCB
	BNE	10$
	LDX	I,PLAY
	CLRA			;A TRACKS LSB OF X(ALMOST)
1$:	STAA	X,0
	INCA
	INX
	CMPA	I,120
	BMI	1$
	BNE	2$
	ADDA	I,20		;SKIP EMPTY CHARACTER ROM
2$:	CMPA	I,160		;STILL DOING CHARACTERS?
	BMI	1$		;YES, CONTINUE
	LDS	I,PCTBL-1	;ELSE POINT TO CARS
	LDAA	I,97.
3$:	PULB			;GET A CAR PIECE
4$:	STAB	X,0		;STASH IT
	INX
	INCA
	CMPA	I,314		;COUNT OF CAR STAMPS OUTPUT
	BEQ	20$
	CMPA	I,221
	BNE	5$
	LDX	I,PLAY+240
5$:	CMPA	I,241
	BNE	6$
	LDX	I,PLAY+300
6$:	BITA	I,3
	BNE	3$
	LDAB	I,WHITE
	BRA	4$
20$:	LDX	I,PLAY+276
	LDAA	I,14
	LDAB	I,333		;FRONT WHEELS OF HIGH WHEELY
21$:	BITA	I,3
	BNE	22$		;DON'T MESS WITH MOST OF THEM
	STAB	X,0		;JUST PUT THEM WHERE THEY'RE NEEDED
22$:	DEX
	DECA
	BPL	21$
SWTST:	LDS	I,377
	STAB	E,MOTOR1
	STAB	E,MOTOR2	;TURN ON MOTORS
SWTLOP:	JSR	RSWT		;GET PLAYER CTL.'S IN A&B
	LSRA
	EORA	X,17.		;SHIFT IN COINS SWITCH
	LSRA
	EORA	X,33.		;AND START BUTTON
	LSRB
	EORB	X,25.		;AND OTHER COIN SWITCH
	LSRB
	EORB	X,41.		;AND OTHER START BUTTON
	STAB	D,SWT		;SAVE ACCUMULATED WORD
	CLC
	BPL	2$
	CLR	E,L		;INDICATE START PRESSED
	SEC
2$:	ROL	E,LAMP2
	STAA	D,SWT+2		;SAVE AND TST
	CLC
	BPL	3$
	CLR	E,L		;INDICATE START PRESSED
	SEC
3$:	ROL	E,LAMP1
	TST	E,L
	BEQ	7$		;START BUTTON PRESSED
	ASLA
	ASLA			;ELSE CHECK ACEL
	BMI	4$
	COMA			;COMPLEMENT OF SIGN INTO BIT 0
4$:	ASLB
	ASLB
	BMI	5$
	COMB
5$:	LDX	I,MSPD1
6$:	STAA	X,0
	STAB	X,16.
	INX
	CPX	I,EXPL1
	BNE	6$
	BRA	SWTLOP
7$:	TST	E,M		;BEEN HERE BEFORE?
	BEQ	BEEBOP		;IF WE HAVE
	CLR	E,M		;MARK OUR PLACE
	CLR	E,MOTOR1
	CLR	E,MOTOR2		;SHUT OFF MOTORS
BEEBOP:	EORA	D,TSTW+2
	BNE	BBSWB
	EORB	D,TSTW
	BEQ	SWTLOP
	ANDB	D,SWT
	BNE	BEEP
BOP:	LDAA	I,1
	STAA	E,TONE1
BBCOM:	LDX	I,10000
1$:	DEX
	BNE	1$
	CLR	E,TONE1
	CLR	E,TONE2
	LDAA	D,SWT
	STAA	D,TSTW
	LDAA	D,SWT+2
	STAA	D,TSTW+2
	BRA	SWTLOP
BBSWB:	ANDA	D,SWT+2
	BEQ	BOP
BEEP:	LDAA	I,1
	STAA	E,TONE2
	BRA	BBCOM
CKS1E:	.BYTE	260
FILL	=17770-.
	.REPT	FILL
	.BYTE	0
	.ENDR
RESETH	=RESET/400
RESETL	=RESET&377
	.BYTE	INTEN/400,INTEN&377
	.BYTE	RESETH,RESETL
	.BYTE	RESETH,RESETL
	.BYTE	RESETH,RESETL
	.IF	NDF,ROM
	.RADIX	16
	.=0A000
	.WORD	INTEN
	.=0A048
	.WORD	RESET
	.ENDC
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                       